<launch>

	<!-- Load the URDF into the ROS Parameter Server -->
	<arg name="transmission" default="position"/>
	<param name="robot_description" 
	  command="$(find xacro)/xacro '$(find cyton_gamma_300_description)/urdf/cyton_gamma_300.urdf.xacro'
	  transmission:=$(arg transmission)
	 simulation:=false " />

	<rosparam file="$(find cyton_gamma_300_controllers)/config/robot_manipulator_dynamixel_controller.yaml" command="load"/>

	<node name="one_cyton_controller_spawner" pkg="dynamixel_controllers"
	  type="controller_spawner.py" ns="/cyton_gamma_300"
	  args="--manager=cyton_manager --port port_0 --type=simple
			shoulder_roll_position_controller
			shoulder_pitch_position_controller
			elbow_roll_position_controller
			elbow_pitch_position_controller
			elbow_yaw_position_controller
			wrist_pitch_position_controller
			wrist_roll_position_controller"
		output="screen"/>

	<node name="one_cyton_action_controller_spawner" pkg="dynamixel_controllers"
	  type="controller_spawner.py" ns="/cyton_gamma_300"
	  args="--manager=cyton_manager --type=meta
			cyton_joint_trajectory_action_controller
			shoulder_roll_position_controller
			shoulder_pitch_position_controller
			elbow_roll_position_controller
			elbow_pitch_position_controller
			elbow_yaw_position_controller
			wrist_pitch_position_controller
			wrist_roll_position_controller"
	  output="screen"/>

      <!-- convert joint states to TF transforms for rviz, etc -->
      <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen">
        <remap from="/joint_states" to="/cyton_gamma_300/joint_states" />
      </node>

</launch>
